@startuml
left to right direction

' Define Actors
actor "المستخدم العام" as User
actor "الصيدلي" as Pharmacist
actor "المسؤول" as Admin

' Actor Inheritance (Pharmacist and Admin are also Users with specific roles)
Pharmacist --|> User
Admin --|> User

' Define System Boundary (Optional but good for context)
rectangle "نظام الصيدلية والتواصل الصحي" {

  package "إدارة الحسابات والمصادقة" {
    User -- (تسجيل حساب جديد)
    User -- (تأكيد البريد الإلكتروني)
    User -- (تسجيل الدخول)
    User -- (تسجيل الخروج)
    User -- (عرض/تحديث الملف الشخصي)
    Admin -- (إدارة المستخدمين)
    (إدارة المستخدمين) .> (عرض قائمة المستخدمين) : <<include>>
    (إدارة المستخدمين) .> (تحديث بيانات مستخدم) : <<include>>
    (إدارة المستخدمين) .> (حذف مستخدم) : <<include>>
    Admin -- (إنشاء حساب مسؤول)
  }

  package "إدارة المنتجات والفئات" {
    User -- (تصفح المنتجات)
    User -- (البحث عن منتج)
    User -- (عرض تفاصيل المنتج)
    User -- (إدارة المنتجات المفضلة)

    User -- (تصفح الفئات)
    User -- (البحث عن فئة)
    User -- (عرض المنتجات حسب الفئة)

    Admin -- (إدارة الفئات)
    (إدارة الفئات) .> (إنشاء فئة) : <<include>>
    (إدارة الفئات) .> (تحديث فئة) : <<include>>
    (إدارة الفئات) .> (حذف فئة) : <<include>>

    Admin -- (إدارة المنتجات العامة)
    (إدارة المنتجات العامة) .> (إنشاء منتج عام) : <<include>>
    (إدارة المنتجات العامة) .> (تحديث منتج عام) : <<include>>
    (إدارة المنتجات العامة) .> (حذف منتج عام) : <<include>>

    Pharmacist -- (إضافة/إنشاء منتج للصيدلية)
    Pharmacist -- (عرض أدوية الصيدلية)
  }

  package "إدارة سلة التسوق والطلبات العادية" {
    User -- (إدارة سلة التسوق)
    (إدارة سلة التسوق) .> (إضافة منتج للسلة) : <<include>>
    (إدارة سلة التسوق) .> (عرض السلة) : <<include>>
    (إدارة سلة التسوق) .> (تحديث منتج في السلة) : <<include>>
    (إدارة سلة التسوق) .> (إزالة منتج من السلة) : <<include>>
    (إدارة سلة التسوق) .> (إفراغ السلة) : <<include>>

    User -- (إنشاء طلب عادي)
    User -- (عرض طلباتي)
    User -- (تقييم الطلب)
    Pharmacist -- (عرض طلبات الصيدلية)
    Pharmacist -- (تحديث حالة الطلب)
  }

  package "إدارة الصيدليات" {
    User -- (تصفح الصيدليات)
    User -- (البحث عن صيدلية قريبة)
    User -- (عرض تفاصيل الصيدلية)
    User -- (تقييم الصيدلية)
    User -- (البحث عن دواء في صيدلية)

    Pharmacist -- (إنشاء/تحديث ملف الصيدلية)
    Pharmacist -- (عرض ملف صيدليتي)
    Pharmacist -- (عرض طلبات صيدليتي) ' Could be linked to general order viewing
  }

  package "طلبات الطوارئ" {
    User -- (إنشاء طلب طوارئ)
    User -- (عرض طلبات الطوارئ الخاصة بي)
    User -- (إلغاء طلب طوارئ)
    Pharmacist -- (عرض طلبات الطوارئ الواردة للصيدلية)
    Pharmacist -- (الاستجابة لطلب طوارئ)
  }

  package "منشورات المساعدة (كفو)" {
    User -- (إنشاء منشور مساعدة)
    User -- (تصفح منشورات المساعدة)
    User -- (تصفح منشورات المساعدة القريبة)
    User -- (قبول طلب مساعدة)
    User -- (إكمال طلب مساعدة)
    User -- (حذف منشور مساعدة)
  }

  package "إدارة الأدوية المستخدمة" {
    User -- (إضافة دواء مستخدم)
    User -- (عرض الأدوية المستخدمة)
    User -- (تحديث/حذف دواء مستخدم)
  }

  package "خدمات عامة" {
    (رفع الملفات) .up.> (إنشاء/تحديث ملف الصيدلية) : <<extend>> ' Example: Pharmacy Logo
    (رفع الملفات) .up.> (إنشاء منتج عام) : <<extend>> ' Example: Product Image
    (رفع الملفات) .up.> (إنشاء طلب طوارئ) : <<extend>> ' Example: Prescription
    User -- (رفع الملفات)
    Pharmacist -- (رفع الملفات)
    Admin -- (رفع الملفات)
  }

  ' Common validation middleware, could be represented as an included use case for many actions
  usecase "التحقق من صحة المدخلات" as ValidateInput
  (تسجيل حساب جديد) ..> ValidateInput : <<include>>
  (تسجيل الدخول) ..> ValidateInput : <<include>>
  (إنشاء فئة) ..> ValidateInput : <<include>>
  (إضافة منتج للسلة) ..> ValidateInput : <<include>>
  ' ... and so on for many other use cases
}

@enduml