const fs = require('fs');
const path = require('path');

const modulesDir = path.join(__dirname, 'src', 'modules');
const outputFile = path.join(__dirname, 'src', 'routes', 'index.js');

if (!fs.existsSync(path.dirname(outputFile))) {
  fs.mkdirSync(path.dirname(outputFile), { recursive: true });
}

const routeEntries = [];

fs.readdirSync(modulesDir).forEach((moduleName) => {
  const modulePath = path.join(modulesDir, moduleName);
  const indexFile = path.join(modulePath, 'index.js');

  if (fs.existsSync(indexFile)) {
    const routeVar = moduleName.replace(/[-\s]/g, '_');
    routeEntries.push({
      varName: routeVar,
      importPath: `../modules/${moduleName}`,
      routePath: `/${moduleName.toLowerCase()}`
    });
  }
});

const importLines = routeEntries.map(
  (r) => `const ${r.varName} = require('${r.importPath}');`
);

const routeLines = routeEntries.map(
  (r) => `  app.use('${r.routePath}', ${r.varName}.route);`
);

const fileContent = `
// ðŸš€ Auto-generated by generateRoutesIndex.js

${importLines.join('\n')}

module.exports = (app) => {
${routeLines.join('\n')}
};
`;

fs.writeFileSync(outputFile, fileContent);
console.log(`âœ… routes/index.js generated with ${routeEntries.length} routes.`);
